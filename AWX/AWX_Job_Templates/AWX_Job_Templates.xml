<?xml version="1.0" encoding="UTF-8" ?>
<feed  version="1.0" hasPendingRequests="false" >
  <company></company>
  <status>200</status>
  <errmsg>OK</errmsg>
  <interval>0</interval>
    <entry type="predatasource">
        <version>1585845013</version>
        <name>AWX_Job_Templates</name>
        <displayedas>AWX Job Templates</displayedas>
        <description></description>
        <collector>batchscript</collector>
        <hasMultiInstances>true</hasMultiInstances>
        <schedule>180</schedule>
        <appliesTo>awx.user &#38;&#38; awx.pass</appliesTo>
        <wildcardauto>true</wildcardauto>
        <wildcardpersist>false</wildcardpersist>
        <wildcardlinuxscript>ad_script</wildcardlinuxscript>
        <wildcardlinuxcmdline>type=&#34;embeded&#34; </wildcardlinuxcmdline>
        <wildcardwinscript>ad_script</wildcardwinscript>
        <wildcardwincmdline>type=&#34;embeded&#34; </wildcardwincmdline>
        <wildcardgroovyscript>import com.santaba.agent.groovyapi.http.HTTP
import groovy.json.JsonSlurper

def hostname = hostProps.get(&#34;system.hostname&#34;)
def password=hostProps.get(&#34;awx.pass&#34;)
def username=hostProps.get(&#34;awx.user&#34;)
def port = hostProps.get(&#34;awx.port&#34;) ? hostProps.get(&#34;awx.port&#34;).toInteger() : 80

httpClient = HTTP.open(hostname, port)

headers = [
  &#34;Authorization&#34;: &#34;Basic ${&#34;${username}:${password}&#34;.bytes.encodeBase64().toString()}&#34;,
  &#34;Content-Type&#34;: &#34;application/json&#34;
]

url = &#34;http://${hostname}/api/v2/job_templates/&#34;
response = httpClient.get(url,headers)
if  (httpClient.getStatusCode() != 200 ) { println(response);return 1; }
objects = new JsonSlurper().parseText(httpClient.getResponseBody())
objects.results.each{job -&#62;
  println(&#34;${job.id}##${job.name}##${job.summary_fields.project.name}/${job.playbook}####inventory=${job.summary_fields.inventory.name}&#34;)
}
return 0
</wildcardgroovyscript>
        <wildcardschedule>0</wildcardschedule>
        <wildcarddisable>false</wildcarddisable>
        <wildcarddeleteinactive>true</wildcarddeleteinactive>
        <agdmethod>ilp</agdmethod>
        <agdparams>auto.inventory</agdparams>
        <group>_WeenigWare AWX - Ansible Tower</group>
        <tags></tags>
        <technology></technology>
        <adlist><![CDATA[{"agdmethod":"ilp","method":"ad_script","agdparams":"auto.inventory","id":0,"filters":[],"params":{"type":"embeded","groovyscript":"import com.santaba.agent.groovyapi.http.HTTP\nimport groovy.json.JsonSlurper\n\ndef hostname = hostProps.get(\"system.hostname\")\ndef password=hostProps.get(\"awx.pass\")\ndef username=hostProps.get(\"awx.user\")\ndef port = hostProps.get(\"awx.port\") ? hostProps.get(\"awx.port\").toInteger() : 80\n\nhttpClient = HTTP.open(hostname, port)\n\nheaders = [\n  \"Authorization\": \"Basic ${\"${username}:${password}\".bytes.encodeBase64().toString()}\",\n  \"Content-Type\": \"application/json\"\n]\n\nurl = \"http://${hostname}/api/v2/job_templates/\"\nresponse = httpClient.get(url,headers)\nif  (httpClient.getStatusCode() != 200 ) { println(response);return 1; }\nobjects = new JsonSlurper().parseText(httpClient.getResponseBody())\nobjects.results.each{job ->\n  println(\"${job.id}##${job.name}##${job.summary_fields.project.name}/${job.playbook}####inventory=${job.summary_fields.inventory.name}\")\n}\nreturn 0\n"}}]]></adlist>
        <schemaVersion>2</schemaVersion>
        <dataSourceType>1</dataSourceType>
        <attributes>
        <attribute>
            <name>scripttype</name>
            <value>embed</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>scriptgroovy</name>
            <value>import com.santaba.agent.groovyapi.http.HTTP
import groovy.json.JsonSlurper

def hostname = hostProps.get(&#34;system.hostname&#34;)
def password=hostProps.get(&#34;awx.pass&#34;)
def username=hostProps.get(&#34;awx.user&#34;)
def port = hostProps.get(&#34;awx.port&#34;) ? hostProps.get(&#34;awx.port&#34;).toInteger() : 80

httpClient = HTTP.open(hostname, port)

headers = [
  &#34;Authorization&#34;: &#34;Basic ${&#34;${username}:${password}&#34;.bytes.encodeBase64().toString()}&#34;,
  &#34;Content-Type&#34;: &#34;application/json&#34;
]

url = &#34;http://${hostname}/api/v2/job_templates/&#34;
response = httpClient.get(url,headers)
if  (httpClient.getStatusCode() != 200 ) { println(response);return 1; }
objects = new JsonSlurper().parseText(httpClient.getResponseBody())
objects.results.each{job -&#62;
  println(&#34;${job.id}.failures: ${(job.summary_fields.last_job.failed == &#34;true&#34;) ? 1 : 0}&#34;)
}
return 0</value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowsscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxscript</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>windowscmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        <attribute>
            <name>linuxcmdline</name>
            <value></value>
            <comment></comment>
        </attribute>
        </attributes>
        <datapoints>
        <datapoint>
            <name>failures</name>
            <dataType>7</dataType>
            <type>2</type>
            <postprocessormethod>namevalue</postprocessormethod>
            <postprocessorparam>##WILDVALUE##.failures</postprocessorparam>
            <usevalue>output</usevalue>
            <alertexpr></alertexpr>
            <alertmissing>1</alertmissing>
            <alertsubject></alertsubject>
            <alertbody></alertbody>
            <enableanomalyalertsuppression></enableanomalyalertsuppression>
            <description></description>
            <maxvalue></maxvalue>
            <minvalue></minvalue>
            <userparam1></userparam1>
            <userparam2></userparam2>
            <userparam3></userparam3>
            <iscomposite>false</iscomposite>
            <rpn></rpn>
            <alertTransitionIval>0</alertTransitionIval>
            <alertClearTransitionIval>0</alertClearTransitionIval>
        </datapoint>
        </datapoints>
        <graphs>
        <graph>
            <name>Job Failures</name>
            <title>Job Failures</title>
            <verticallabel>count</verticallabel>
            <rigid>false</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <graphdatapoints>
        <graphdatapoint>
            <name>failures</name>
            <datapointname>failures</datapointname>
            <cf>1</cf>
        </graphdatapoint>
            </graphdatapoints>
            <graphvirtualdatapoints>
            </graphvirtualdatapoints>
            <graphdatas>
            <graphdata>
                <type>1</type>
                <legend>Failures</legend>
                <color>red</color>
                <datapointname>failures</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
            </graphdata>
            </graphdatas>
        </graph>
        </graphs>
        <overviewgraphs>
        <overviewgraph>
            <name>Job Failures</name>
            <title>Job Failures</title>
            <verticallabel>count</verticallabel>
            <rigid>false</rigid>
            <maxvalue>NaN</maxvalue>
            <minvalue>0.0</minvalue>
            <displayprio>1</displayprio>
            <timescale>1day</timescale>
            <base1024>false</base1024>
            <aggregated>false</aggregated>
            <datapoints>
        <overviewgraphdatapoint>
            <name>failures</name>
            <datapointname>failures</datapointname>
            <cf>1</cf>
            <aggregateMethod>sum</aggregateMethod>
        </overviewgraphdatapoint>
            </datapoints>
            <virtualdatapoints>
            </virtualdatapoints>
            <lines>
            <overviewgraphline>
                <type>3</type>
                <legend>##INSTANCE##</legend>
                <datapointname>failures</datapointname>
                <isvirtualdatapoint>false</isvirtualdatapoint>
                <color>silver</color>
            </overviewgraphline>
            </lines>
        </overviewgraph>
        </overviewgraphs>
        <scripts>
        </scripts>
    </entry>
</feed>
