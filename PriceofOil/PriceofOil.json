{
  "id" : 13104231,
  "description" : "Price of oil as obtained from oilprice.com. Uses raw screen scrape, so changes in the webpage could break the collection and require rewrite of the RegEx expression used to extract the price.",
  "group" : "_WeenigWare Community",
  "appliesTo" : "system.hostname == \"oilprice.com\"",
  "technology" : "",
  "tags" : "",
  "checksum" : "53390fc1a7e1b94abf621f5e506a1f32",
  "lineageId" : "vX2MRroTSgqb4xEeA3LqFQ",
  "name" : "PriceofOil",
  "displayName" : "Price of Oil",
  "version" : 1585674121,
  "auditVersion" : 0,
  "hasMultiInstances" : true,
  "collectInterval" : 60,
  "collectMethod" : "batchscript",
  "collectorAttribute" : {
    "name" : "batchscript",
    "linuxCmdline" : "",
    "linuxScript" : "",
    "groovyScript" : "page = new URL(\"https://oilprice.com/oil-price-charts\").getText()\n// println(page + \"\\n\" + \"=\".multiply(80))\nad = false\ninstances = [\n  \"WTI Crude\":    /<td>WTI Crude.*\\s*<td class='last_price' data-price='(.*?)'>.*<.td><td dir='ltr' class='change_/,\n  \"Brent Crude\":/<td>Brent Crude.*\\s*<td class='last_price' data-price='(.*?)'>.*<.td><td dir='ltr' class='change_/,\n]\ninstances.each {k,v ->\n  if (ad){\n    println(\"${k.replaceAll(\" \",\"\")}##${k}\")\n  } else {\n    if ((page =~ v).size() > 0){ //this might be doable with elvis, but this works\n      println(\"${k.replaceAll(\" \",\"\")}.price: ${(page =~ v)[0][1]}\")\n    }\n  }\n}\n\nreturn 0",
    "scriptType" : "embed",
    "windowsCmdline" : "",
    "windowsScript" : ""
  },
  "enableAutoDiscovery" : true,
  "autoDiscoveryConfig" : {
    "persistentInstance" : false,
    "disableInstance" : false,
    "deleteInactiveInstance" : true,
    "instanceAutoGroupMethod" : "none",
    "instanceAutoGroupMethodParams" : "",
    "scheduleInterval" : 0,
    "method" : {
      "name" : "ad_script",
      "type" : "embeded",
      "winScript" : null,
      "winCmdline" : null,
      "linuxCmdline" : null,
      "linuxScript" : null,
      "groovyScript" : "page = new URL(\"https://oilprice.com/oil-price-charts\").getText()\n// println(page + \"\\n\" + \"=\".multiply(80))\nad = true\ninstances = [\n  \"WTI Crude\":    /<td>WTI Crude.*\\s*<td class='last_price' data-price='(.*?)'>.*<.td><td dir='ltr' class='change_up/,\n  \"Brent Crude\":/<td>Brent Crude.*\\s*<td class='last_price' data-price='(.*?)'>.*<.td><td dir='ltr' class='change_up/,\n]\ninstances.each {k,v ->\n  if (ad){\n    println(\"${k.replaceAll(\" \",\"\")}##${k}\")\n  } else {\n    if ((page =~ v).size() > 0){ //this might be doable with elvis, but this works\n      println(\"${k.replaceAll(\" \",\"\")}.price: ${(page =~ v)[0][1]}\")\n    }\n  }\n}\n\nreturn 0\n"
    },
    "filters" : [ ]
  },
  "dataPoints" : [ {
    "id" : 17684,
    "dataSourceId" : 13104231,
    "name" : "price",
    "description" : "",
    "alertTransitionInterval" : 0,
    "alertClearTransitionInterval" : 0,
    "type" : 2,
    "dataType" : 7,
    "maxDigits" : 4,
    "postProcessorMethod" : "namevalue",
    "postProcessorParam" : "##WILDVALUE##.price",
    "rawDataFieldName" : "output",
    "maxValue" : "",
    "minValue" : "",
    "userParam1" : "",
    "userParam2" : "",
    "userParam3" : "",
    "alertForNoData" : 1,
    "alertExpr" : "",
    "alertExprNote" : "",
    "alertSubject" : "",
    "alertBody" : "",
    "enableAnomalyAlertSuppression" : ""
  } ],
  "enableEriDiscovery" : false,
  "eriDiscoveryInterval" : -1,
  "eriDiscoveryConfig" : null
}