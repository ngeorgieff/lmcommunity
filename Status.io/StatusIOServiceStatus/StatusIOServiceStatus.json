{
  "id" : 13152728,
  "description" : "Monitor status of services.",
  "group" : "",
  "appliesTo" : "statusio_key || auto.statusio_key",
  "technology" : "Add status.[App].io as a resource and add 'statusio_key' as a property. To find the key, go to 'https://status.[App].us/api/v2#summary', expand the example, and look for the key in the url 'https://[key].statuspage.io/api/v2/summary.json'.\nIf the FQDN is not key.statuspage.io, this version of the DS will not work.",
  "tags" : "chat,zoom,networking,video",
  "checksum" : "84b5b994ae48cb65fb95a780cb9b925b",
  "lineageId" : "tP1h7MptQjeqIzedFX7C6g",
  "name" : "StatusIOServiceStatus",
  "displayName" : "Service Status",
  "version" : 1585243986,
  "auditVersion" : 0,
  "hasMultiInstances" : true,
  "collectInterval" : 300,
  "collectMethod" : "batchscript",
  "collectorAttribute" : {
    "name" : "batchscript",
    "linuxCmdline" : "",
    "linuxScript" : "",
    "groovyScript" : "/*******************************************************************************\n * © 2007-2020 - LogicMonitor, Inc. All rights reserved.\n ******************************************************************************/\n\n\nimport groovy.json.JsonSlurper\n\ndef statusIoKey = hostProps.get(\"statusio_key\")\ndef statusIoDomain = hostProps.get(\"statusio_domain\") ?: \"statuspage.io\"\n\nurl = \"https://${statusIoKey}.${statusIoDomain}/api/v2/summary.json\"\n\ndef STATUS_MAP = [\"operational\":0, \"degraded_performance\": 1, \"partial_outage\": 2, \"major_outage\": 3]\n\ndef payload = url.toURL().getText()\ndef status = new JsonSlurper().parseText(payload)\n\nstatus.components.each { component ->\n    println \"${component.id}.status=${STATUS_MAP.get(component.status, component.status)}\"\n}\n\nreturn 0",
    "scriptType" : "embed",
    "windowsCmdline" : "",
    "windowsScript" : ""
  },
  "enableAutoDiscovery" : true,
  "autoDiscoveryConfig" : {
    "persistentInstance" : false,
    "disableInstance" : false,
    "deleteInactiveInstance" : false,
    "instanceAutoGroupMethod" : "none",
    "instanceAutoGroupMethodParams" : "",
    "scheduleInterval" : 60,
    "method" : {
      "name" : "ad_script",
      "type" : "embeded",
      "winScript" : null,
      "winCmdline" : null,
      "linuxCmdline" : null,
      "linuxScript" : null,
      "groovyScript" : "/*******************************************************************************\n * © 2007-2020 - LogicMonitor, Inc. All rights reserved.\n ******************************************************************************/\n\nimport groovy.json.JsonSlurper\n\ndef statusIoKey = hostProps.get(\"statusio_key\") ?: hostProps.get(\"auto.statusio_key\")\ndef statusIoDomain = hostProps.get(\"statusio_domain\") ?: \"statuspage.io\"\n\nurl = \"https://${statusIoKey}.${statusIoDomain}/api/v2/summary.json\"\n\ndef payload = url.toURL().getText()\ndef status = new JsonSlurper().parseText(payload)\n\nstatus.components.each { component ->\n    println \"${component.id}##${component.name}\"\n}\n\nreturn 0\n"
    },
    "filters" : [ ]
  },
  "dataPoints" : [ {
    "id" : 14542,
    "dataSourceId" : 13152728,
    "name" : "Status",
    "description" : "Status of the particular service.\n\nStatus codes:\n0=operational,\n1=degraded performance,\n2=partial outage,\n3=major outage",
    "alertTransitionInterval" : 2,
    "alertClearTransitionInterval" : 1,
    "type" : 2,
    "dataType" : 7,
    "maxDigits" : 4,
    "postProcessorMethod" : "namevalue",
    "postProcessorParam" : "##WILDVALUE##.status",
    "rawDataFieldName" : "output",
    "maxValue" : "3",
    "minValue" : "0",
    "userParam1" : "",
    "userParam2" : "",
    "userParam3" : "",
    "alertForNoData" : 1,
    "alertExpr" : ">= 1 2 3",
    "alertExprNote" : "",
    "alertSubject" : "",
    "alertBody" : "",
    "enableAnomalyAlertSuppression" : ""
  } ],
  "enableEriDiscovery" : false,
  "eriDiscoveryInterval" : -1,
  "eriDiscoveryConfig" : null
}